version: '3.8'

services:
  preprocess:
    build:
      context: ./preprocess
      dockerfile: Dockerfile
    volumes:
      - ./preprocess:/app
      - ./data:/app/data
    command: ["python", "preprocess.py"]

  db:
    image: mysql
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-mydb}
    ports:
      - "3306:3306"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./data:/var/lib/mysql-files
      - mysql_db_container:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
    depends_on:
      preprocess:
        condition: service_completed_successfully
    networks:
      - app-network

  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"

  jupyter:
    build: analyse/
    ports:
      - "8888:8888"
    volumes:
      - ./analyse:/work
    environment:
      - MYSQL_URI=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD}@db:3306/
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

volumes:
  mysql_db_container:
  data:

networks:
  app-network:
    driver: bridge